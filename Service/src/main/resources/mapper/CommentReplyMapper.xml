<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.uipservice.dao.CommentReplyMapper">

    <resultMap id="BaseResultMap" type="com.example.uipservice.entity.CommentReply" >
        <id column="info_id" property="infoId" jdbcType="BIGINT" />
        <result column="comment_id" property="toId" jdbcType="BIGINT" />
        <result column="commentator_id" property="fromId" jdbcType="BIGINT" />
        <result column="user_name" property="fromName" jdbcType="VARCHAR" />
        <result column="portrait" property="portrait" jdbcType="VARCHAR" />
        <result column="refer_user" property="toName" jdbcType="VARCHAR" />
        <result column="refer_content" property="reference" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="report_number" property="reportNumber" jdbcType="INTEGER" />
        <result column="like_number" property="likeNumber" jdbcType="INTEGER" />
        <result column="info_date" property="infoDate" jdbcType="TIMESTAMP" />
        <result column="created" property="created" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List" >
    info_id, comment_id, commentator_id, refer_user, refer_content, content,
    report_number, like_number, info_date, created
    </sql>

    <select id="queryReply" resultMap="BaseResultMap" parameterType="com.example.uipservice.entity.CommentReply">
        select info_id, comment_id, commentator_id, refer_user, refer_content,
        content, report_number, like_number, info_date, comment_reply.created,
        user_name, portrait
        from comment_reply inner join user_info
        on commentator_id = user_id
        where comment_id = #{toId, jdbcType=BIGINT} and report_number &lt; 10
        order by like_number desc
    </select>

    <select id="queryReplyByCreated" resultMap="BaseResultMap" parameterType="com.example.uipservice.entity.CommentReply">
        select info_id, comment_id, commentator_id, refer_user, refer_content,
        content, report_number, like_number, info_date, comment_reply.created,
        user_name, portrait
        from comment_reply inner join user_info
        on commentator_id = user_id
        where comment_id = #{toId, jdbcType=BIGINT} and report_number &lt; 10
        order by created
    </select>

    <select id="queryReplyByCreatedDesc" resultMap="BaseResultMap" parameterType="com.example.uipservice.entity.CommentReply">
        select info_id, comment_id, commentator_id, refer_user, refer_content,
        content, report_number, like_number, info_date, comment_reply.created,
        user_name, portrait
        from comment_reply inner join user_info
        on commentator_id = user_id
        where comment_id = #{toId, jdbcType=BIGINT} and report_number &lt; 10
        order by created desc
    </select>

    <insert id="insertSelective" parameterType="com.example.uipservice.entity.CommentReply" >
        <selectKey resultType="java.lang.Long" keyProperty="infoId" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into comment_reply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="toId != null" >
                comment_id,
            </if>
            <if test="fromId != null" >
                commentator_id,
            </if>
            <if test="toName != null">
                refer_user,
            </if>
            <if test="reference != null">
                refer_content,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="reportNumber != null" >
                report_number,
            </if>
            <if test="likeNumber != null" >
                like_number,
            </if>
            <if test="infoDate != null" >
                info_date,
            </if>
            <if test="created != null" >
                created,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="toId != null" >
                #{toId,jdbcType=BIGINT},
            </if>
            <if test="fromId != null" >
                #{fromId,jdbcType=BIGINT},
            </if>
            <if test="toName != null">
                #{toName, jdbcType=VARCHAR},
            </if>
            <if test="reference != null">
                #{reference, jdbcType=VARCHAR},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="reportNumber != null" >
                #{reportNumber,jdbcType=INTEGER},
            </if>
            <if test="likeNumber != null" >
                #{likeNumber,jdbcType=INTEGER},
            </if>
            <if test="infoDate != null" >
                #{infoDate,jdbcType=TIMESTAMP},
            </if>
            <if test="created != null" >
                #{created,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <insert id="insert" parameterType="com.example.uipservice.entity.CommentReply">
        <selectKey resultType="java.lang.Long" keyProperty="infoId" order="AFTER" >
            select LAST_INSERT_ID()
        </selectKey>
        insert into comment_reply (comment_id, commentator_id, refer_user, refer_content,
        content, report_number, like_number, info_date, created)
        values (#{toId, jdbcType=BIGINT}, #{fromId, jdbcType=BIGINT},
        #{toName, jdbcType=VARCHAR}, #{reference, jdbcType=VARCHAR},
        #{content, jdbcType=VARCHAR},
        #{reportNumber, jdbcType=INTEGER}, #{likeNumber, jdbcType=INTEGER},
        #{infoDate, jdbcType=TIMESTAMP}, #{created, jdbcType=TIMESTAMP})
    </insert>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from comment_reply
        where info_id = #{infoId, jdbcType=BIGINT}
    </delete>

</mapper>